[{"D:\\Projects\\alpha-shop\\frontend\\src\\index.js":"1","D:\\Projects\\alpha-shop\\frontend\\src\\App.js":"2","D:\\Projects\\alpha-shop\\frontend\\src\\reportWebVitals.js":"3","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Header.js":"4","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Footer.js":"5","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Projects\\alpha-shop\\frontend\\src\\products.js":"7","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Product.js":"8","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Rating.js":"9","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Projects\\alpha-shop\\frontend\\src\\store.js":"11","D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\productReducers.js":"12","D:\\Projects\\alpha-shop\\frontend\\src\\constants\\productConstants.js":"13","D:\\Projects\\alpha-shop\\frontend\\src\\actions\\productActions.js":"14","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Loader.js":"15","D:\\Projects\\alpha-shop\\frontend\\src\\components\\Message.js":"16","D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\productDetailsReducers.js":"17","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\CartScreen.js":"18","D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\cartReducers.js":"19","D:\\Projects\\alpha-shop\\frontend\\src\\constants\\cartConstants.js":"20","D:\\Projects\\alpha-shop\\frontend\\src\\actions\\cartActions.js":"21","D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\userReducers.js":"22","D:\\Projects\\alpha-shop\\frontend\\src\\constants\\userConstants.js":"23","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\LoginScreen.js":"24","D:\\Projects\\alpha-shop\\frontend\\src\\components\\FormContainer.js":"25","D:\\Projects\\alpha-shop\\frontend\\src\\actions\\userActions.js":"26","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\RegisterScreen.js":"27","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ProfileScreen.js":"28","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ShippingScreen.js":"29","D:\\Projects\\alpha-shop\\frontend\\src\\components\\CheckoutSteps.js":"30","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\PaymentScreen.js":"31","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"32"},{"size":592,"mtime":1610988975793,"results":"33","hashOfConfig":"34"},{"size":1601,"mtime":1614614613690,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":2085,"mtime":1612454503971,"results":"37","hashOfConfig":"34"},{"size":423,"mtime":1608485615614,"results":"38","hashOfConfig":"34"},{"size":1073,"mtime":1611070811659,"results":"39","hashOfConfig":"34"},{"size":2486,"mtime":1608573974279,"results":"40","hashOfConfig":"34"},{"size":913,"mtime":1608571848659,"results":"41","hashOfConfig":"34"},{"size":1329,"mtime":1608570743236,"results":"42","hashOfConfig":"34"},{"size":4507,"mtime":1611684701590,"results":"43","hashOfConfig":"34"},{"size":1727,"mtime":1614532226274,"results":"44","hashOfConfig":"34"},{"size":526,"mtime":1610992160647,"results":"45","hashOfConfig":"34"},{"size":366,"mtime":1611071572246,"results":"46","hashOfConfig":"34"},{"size":1201,"mtime":1611072681369,"results":"47","hashOfConfig":"34"},{"size":479,"mtime":1611070568582,"results":"48","hashOfConfig":"34"},{"size":266,"mtime":1611070610254,"results":"49","hashOfConfig":"34"},{"size":567,"mtime":1611071959961,"results":"50","hashOfConfig":"34"},{"size":3778,"mtime":1614618266722,"results":"51","hashOfConfig":"34"},{"size":1355,"mtime":1614531483443,"results":"52","hashOfConfig":"34"},{"size":236,"mtime":1614531410883,"results":"53","hashOfConfig":"34"},{"size":1344,"mtime":1614531446429,"results":"54","hashOfConfig":"34"},{"size":2130,"mtime":1612621533589,"results":"55","hashOfConfig":"34"},{"size":848,"mtime":1612621355766,"results":"56","hashOfConfig":"34"},{"size":2152,"mtime":1612450083284,"results":"57","hashOfConfig":"34"},{"size":389,"mtime":1612448389048,"results":"58","hashOfConfig":"34"},{"size":3725,"mtime":1612621687632,"results":"59","hashOfConfig":"34"},{"size":3119,"mtime":1612618369421,"results":"60","hashOfConfig":"34"},{"size":3556,"mtime":1612622046027,"results":"61","hashOfConfig":"34"},{"size":2448,"mtime":1614613584291,"results":"62","hashOfConfig":"34"},{"size":1444,"mtime":1614530612790,"results":"63","hashOfConfig":"34"},{"size":1739,"mtime":1614614979984,"results":"64","hashOfConfig":"34"},{"size":5635,"mtime":1614617884520,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"12smk7q",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},"D:\\Projects\\alpha-shop\\frontend\\src\\index.js",[],["136","137"],"D:\\Projects\\alpha-shop\\frontend\\src\\App.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Header.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Footer.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\products.js",[],["138","139"],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Product.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Rating.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\store.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\constants\\productConstants.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\actions\\productActions.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Loader.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\Message.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\productDetailsReducers.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\CartScreen.js",["140"],"import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nconst CartScreen = ({match, location, history}) =>{\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(()=>{\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (<Message>Your cart is empty <Link to='/'>Go Back</Link> </Message>) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item=>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alr={item.name} fluid rounded></Image>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e)=> dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={()=> removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed to checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\actions\\userActions.js",[],["141","142"],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ProfileScreen.js",["143"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {getUserDetails, updateUserProfile} from \"../actions/userActions\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\nconst ProfileScreen = ({location, history}) =>{\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state=>state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    useEffect(()=>{\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","D:\\Projects\\alpha-shop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Projects\\alpha-shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["144","145"],"import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    // Calculate prices\r\n    const addDecimals = (num)=>{\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item)=> acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const placeOrderHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city},\r\n                                {cart.shippingAddress.postalCode},\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Item</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {/*{error && <Message variant='danger'>{error}</Message>}*/}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"146","replacedBy":"150"},{"ruleId":"148","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"146","replacedBy":"156"},{"ruleId":"148","replacedBy":"157"},{"ruleId":"152","severity":1,"message":"158","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"159","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["160"],["161"],"'Link' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]